<?xml version="1.0" ?>
<Window
    Background="Transparent"
    Icon="/Assets/favicon.ico"
    RequestedThemeVariant="{Binding CurrentTheme}"
    Title="RplaceModtools"
    TransparencyLevelHint="Blur"
    d:DesignHeight="600"
    d:DesignWidth="1000"
    mc:Ignorable="d"
    x:Class="RplaceModtools.Views.MainWindow"
    xmlns="https://github.com/avaloniaui"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:RplaceModtools.Models"
    xmlns:rplaceModtools="clr-namespace:RplaceModtools"
    xmlns:views="clr-namespace:RplaceModtools.Views"
    xmlns:vm="using:RplaceModtools.ViewModels"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Window.Styles>
        <Style Selector="Border#PlaceConfigPanel">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="CornerRadius" Value="10" />
            <Setter Property="Width" Value="380" />
        </Style>
        <Style Selector="Grid#MainGrid.Portrait Border#PlaceConfigPanel">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="CornerRadius" Value="0" />
            <Setter Property="Width" Value="{Binding}" />
        </Style>
        <Style Selector="Grid#MainGrid Border#ToolsPanel">
            <Style.Animations>
                <Animation
                    Duration="0:0:0.5"
                    Easing="QuadraticEaseOut"
                    FillMode="Forward">
                    <KeyFrame Cue="0%">
                        <Setter Property="Margin" Value="0 0 -500 0" />
                    </KeyFrame>
                    <KeyFrame Cue="100%">
                        <Setter Property="Margin" Value="0" />
                    </KeyFrame>
                </Animation>
            </Style.Animations>
        </Style>
        <Style Selector="Grid#MainGrid.Portrait Border#ToolsPanel">
            <Style.Animations>
                <Animation
                    Duration="0:0:0.5"
                    Easing="QuadraticEaseOut"
                    FillMode="Forward">
                    <KeyFrame Cue="0%">
                        <Setter Property="Margin" Value="0" />
                    </KeyFrame>
                    <KeyFrame Cue="100%">
                        <Setter Property="Margin" Value="0 0 -500 0" />
                    </KeyFrame>
                </Animation>
            </Style.Animations>
        </Style>
        <Style Selector="Grid#MainGrid.Portrait Border#PlaceConfigPanel" />
        <Style Selector="Image.PlaceLogo">
            <Setter Property="Height" Value="100" />
            <Setter Property="Width" Value="100" />
            <Style.Animations>
                <Animation
                    Delay="0:0:1"
                    Duration="0:0:1"
                    Easing="QuadraticEaseOut">
                    <KeyFrame Cue="0%">
                        <Setter Property="Height" Value="140" />
                        <Setter Property="Opacity" Value="0.0" />
                    </KeyFrame>
                    <KeyFrame Cue="100%">
                        <Setter Property="Height" Value="100" />
                        <Setter Property="Opacity" Value="1.0" />
                    </KeyFrame>
                </Animation>
            </Style.Animations>
        </Style>
        <Style Selector="Label.PlaceTitle">
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="18" />
            <Style.Animations>
                <Animation
                    Delay="0:0:2"
                    Duration="0:0:1.5"
                    Easing="QuadraticEaseOut">
                    <KeyFrame Cue="0%">
                        <Setter Property="Opacity" Value="0.0" />
                    </KeyFrame>
                    <KeyFrame Cue="100%">
                        <Setter Property="Opacity" Value="1.0" />
                    </KeyFrame>
                </Animation>
            </Style.Animations>
        </Style>
        <Style Selector="StackPanel.PlaceConfig">
            <Style.Animations>
                <Animation
                    Delay="0:0:2"
                    Duration="0:0:1.5"
                    Easing="QuadraticEaseOut">
                    <KeyFrame Cue="0%">
                        <Setter Property="Opacity" Value="0.0" />
                        <Setter Property="Spacing" Value="20" />
                    </KeyFrame>
                    <KeyFrame Cue="100%">
                        <Setter Property="Opacity" Value="1.0" />
                        <Setter Property="Spacing" Value="0" />
                    </KeyFrame>
                </Animation>
            </Style.Animations>
        </Style>
        <!--  Palette colour select panel styles  -->
        <Style Selector="Border.DoneButton">
            <Setter Property="Background" Value="{DynamicResource PanelBackgroundBrush}" />
            <Setter Property="BorderBrush" Value="#FF5500" />
            <Setter Property="BorderThickness" Value="4" />
            <Setter Property="CornerRadius" Value="36" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Margin" Value="0 0 0 8" />
            <Setter Property="Width" Value="180" />
        </Style>
        <Style Selector="Border.PaletteColour">
            <Setter Property="Width" Value="50" />
            <Setter Property="Height" Value="30" />
            <Setter Property="BorderBrush" Value="LightGray" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Margin" Value="2" />
        </Style>
        <Style Selector="Border.PaletteColour:pointerover">
            <Setter Property="BoxShadow" Value="inset 50 0 0 0 White" />
            <Setter Property="BorderThickness" Value="0" />
        </Style>
        <Style Selector="ListBox.StateInfo">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="Transparent" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="FocusAdorner" Value="{x:Null}" />
        </Style>
    </Window.Styles>
    <Window.Resources>
        <rplaceModtools:NumericSignConverter x:Key="NumericSignConverter" />
        <rplaceModtools:HashColourConverter x:Key="HashColourConverter" />
        <rplaceModtools:ValueEqualsConverter x:Key="ValueEqualsConverter" />
        <rplaceModtools:ValueNotEqualsConverter x:Key="ValueNotEqualsConverter" />
        <rplaceModtools:AllTrueConverter x:Key="AllTrueConverter" />
        <rplaceModtools:NotConverter x:Key="NotConverter" />
    </Window.Resources>
    <Design.DataContext>
        <vm:MainWindowViewModel />
    </Design.DataContext>
    <Grid ColumnDefinitions="*, Auto" x:Name="MainGrid">
        <!--  Height="508"  -->
        <Border
            Background="{DynamicResource PanelBackgroundBrush}"
            BoxShadow="0 0 20 2 Gray"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            IsVisible="{Binding StartedAndConfigured, Converter={StaticResource NotConverter}}"
            ZIndex="8"
            x:Name="PlaceConfigPanel">
            <Grid RowDefinitions="*, Auto">
                <StackPanel Grid.Row="0">
                    <Image Classes="PlaceLogo" Source="../Assets/favicon.png" />
                    <Label Classes="PlaceTitle">Rplace.Live Mod Tools</Label>
                    <StackPanel Classes="PlaceConfig" Margin="10">
                        <TextBlock FontSize="24" Margin="0,0,0,5">Configuration:</TextBlock>
                        <AutoCompleteBox
                            ItemsSource="{Binding KnownWebsockets}"
                            Margin="0,0,0,5"
                            Text="{Binding CurrentPreset.Websocket}"
                            Watermark="Canvas websocket address" />
                        <AutoCompleteBox
                            ItemsSource="{Binding KnownFileServers}"
                            Margin="0,0,0,5"
                            Text="{Binding CurrentPreset.FileServer}"
                            Watermark="Place file server address" />
                        <Button
                            Click="OnPresetsAdvancedClicked"
                            HorizontalAlignment="Center"
                            Margin="4"
                            x:Name="PresetsAdvancedButton">
                            Advanced &#x25BC;
                        </Button>
                        <StackPanel
                            IsVisible="false"
                            Spacing="5"
                            x:Name="PresetsAdvancedPanel">
                            <ToggleSwitch IsChecked="{Binding CurrentPreset.LegacyServer, Mode=TwoWay}">Legacy server</ToggleSwitch>
                            <TextBox Text="{Binding CurrentPreset.PlacePath}" Watermark="Live canvas path" />
                            <TextBox Text="{Binding CurrentPreset.BackupsRepository}" Watermark="Server backups repository">
                                <TextBox.IsVisible>
                                    <Binding Converter="{StaticResource ValueEqualsConverter}" Path="CurrentPreset.LegacyServer">
                                        <Binding.ConverterParameter>
                                            <x:Boolean>True</x:Boolean>
                                        </Binding.ConverterParameter>
                                    </Binding>
                                </TextBox.IsVisible>
                            </TextBox>
                            <TextBox Text="{Binding CurrentPreset.MainBranch}" Watermark="Backups repository main branch">
                                <TextBox.IsVisible>
                                    <Binding Converter="{StaticResource ValueEqualsConverter}" Path="CurrentPreset.LegacyServer">
                                        <Binding.ConverterParameter>
                                            <x:Boolean>True</x:Boolean>
                                        </Binding.ConverterParameter>
                                    </Binding>
                                </TextBox.IsVisible>
                            </TextBox>
                            <TextBox Text="{Binding CurrentPreset.BackupListPath}" Watermark="Server backup list path">
                                <TextBox.IsVisible>
                                    <Binding Converter="{StaticResource ValueEqualsConverter}" Path="CurrentPreset.LegacyServer">
                                        <Binding.ConverterParameter>
                                            <x:Boolean>False</x:Boolean>
                                        </Binding.ConverterParameter>
                                    </Binding>
                                </TextBox.IsVisible>
                            </TextBox>
                            <TextBox Text="{Binding CurrentPreset.BackupsPath}" Watermark="Server backups directory path">
                                <TextBox.IsVisible>
                                    <Binding Converter="{StaticResource ValueEqualsConverter}" Path="CurrentPreset.LegacyServer">
                                        <Binding.ConverterParameter>
                                            <x:Boolean>False</x:Boolean>
                                        </Binding.ConverterParameter>
                                    </Binding>
                                </TextBox.IsVisible>
                            </TextBox>
                        </StackPanel>
                        <TextBlock FontSize="18" Margin="0,0,0,5">Client</TextBlock>
                        <TextBox
                            Margin="0,0,0,5"
                            PasswordChar="*"
                            RevealPassword="False"
                            Text="{Binding CurrentPreset.AdminKey}"
                            Watermark="Admin key"
                            x:Name="ConfigAdminKeyInput" />
                        <TextBox
                            Margin="0,0,0,5"
                            Text="{Binding CurrentPreset.ChatUsername}"
                            Watermark="Live chat username" />
                        <ScrollViewer>
                            <ListBox ItemsSource="{Binding ServerPresets}" SelectedItem="{Binding CurrentPreset}">
                                <ListBox.Styles>
                                    <Style Selector="ListBox">
                                        <Setter Property="Background" Value="Transparent" />
                                    </Style>
                                    <Style Selector="ListBoxItem">
                                        <Style.Animations>
                                            <Animation
                                                Delay="0:0:3"
                                                Duration="0:0:2"
                                                Easing="QuadraticEaseOut">
                                                <KeyFrame Cue="0%">
                                                    <Setter Property="Opacity" Value="0.0" />
                                                </KeyFrame>
                                                <KeyFrame Cue="100%">
                                                    <Setter Property="Opacity" Value="1.0" />
                                                </KeyFrame>
                                            </Animation>
                                        </Style.Animations>
                                        <Setter Property="Padding" Value="4" />
                                        <Setter Property="MinWidth" Value="72" />
                                        <Setter Property="MinHeight" Value="72" />
                                        <Setter Property="Margin" Value="2" />
                                        <Setter Property="CornerRadius" Value="4" />
                                        <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
                                    </Style>
                                    <Style Selector="TextBlock.ServerPresetHeader">
                                        <Setter Property="FontSize" Value="36" />
                                        <Setter Property="TextAlignment" Value="Center" />
                                        <Setter Property="Canvas.Left" Value="0" />
                                    </Style>
                                    <Style Selector="TextBlock.ServerPresetHeader:pointerover">
                                        <Setter Property="Canvas.Left" Value="{Binding RelativeSource={RelativeSource Self}, Path=DesiredSize.Width, Converter={StaticResource NumericSignConverter}}" />
                                    </Style>
                                </ListBox.Styles>
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <UniformGrid Columns="4" Rows="2" />
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel>
                                            <Canvas>
                                                <TextBlock Classes="ServerPresetHeader" Text="{Binding Websocket}">
                                                    <TextBlock.Transitions>
                                                        <Transitions>
                                                            <DoubleTransition Duration="0:0:6" Property="Canvas.Left" />
                                                        </Transitions>
                                                    </TextBlock.Transitions>
                                                </TextBlock>
                                            </Canvas>
                                            <TextBlock Padding="0,36,0,0" Text="{Binding AdminKey}" />
                                        </StackPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </ScrollViewer>
                    </StackPanel>
                </StackPanel>
                <Button
                    Command="{Binding StartCommand}"
                    CornerRadius="5"
                    Grid.Row="1"
                    HorizontalAlignment="Center"
                    Margin="5"
                    Padding="40,10,40,10"
                    VerticalAlignment="Bottom">
                    Start
                </Button>
            </Grid>
        </Border>
        <!--  Github code  -->
        <Border
            Background="{DynamicResource PanelBackgroundBrush}"
            BorderBrush="Gray"
            BorderThickness="1"
            CornerRadius="8"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            HorizontalAlignment="Center"
            IsVisible="{Binding GithubCodePanelVisible, Mode=OneWay}"
            VerticalAlignment="Center"
            Width="380"
            ZIndex="8"
            x:Name="GithubCodePanel">
            <StackPanel Margin="8" Spacing="4">
                <TextBlock FontWeight="Bold">Github code:</TextBlock>
                <SelectableTextBlock
                    FontSize="36"
                    FontWeight="Bold"
                    Text="{Binding GithubCode}" />
                <TextBlock HorizontalAlignment="Stretch" TextWrapping="Wrap">Enter this code in the github instance opened in your browser to continue</TextBlock>
                <Button Command="{Binding CancelGithubCodeAuthCommand}">Cancel</Button>
            </StackPanel>
        </Border>
        <!--  Image load config  -->
        <Border
            Background="{DynamicResource PanelBackgroundBrush}"
            BorderBrush="Gray"
            BorderThickness="1"
            CornerRadius="8"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            HorizontalAlignment="Center"
            IsVisible="False"
            VerticalAlignment="Center"
            Width="380"
            ZIndex="8"
            x:Name="ImageConfigPanel">
            <StackPanel Margin="8" Spacing="4">
                <TextBlock>Load image:</TextBlock>
                <Grid ColumnDefinitions="* Auto">
                    <TextBox
                        Grid.Column="0"
                        Watermark="From URL"
                        x:Name="ImageUrl" />
                    <Button Click="OnLoadImageFromUrlClicked" Grid.Column="1">Load Image</Button>
                </Grid>
                <Button Click="OnLoadImageFromFileClicked">Select file</Button>
                <TextBox Text="{Binding LoadImageStatus}" />
                <NumericUpDown
                    Maximum="256"
                    Minimum="0"
                    Value="{Binding ImageWidth}" />
                <NumericUpDown
                    Maximum="256"
                    Minimum="0"
                    Value="{Binding ImageHeight}" />
                <NumericUpDown
                    Maximum="{Binding CanvasWidth}"
                    Minimum="0"
                    Value="{Binding ImageX}" />
                <NumericUpDown
                    Maximum="{Binding CanvasHeight}"
                    Minimum="0"
                    Value="{Binding ImageY}" />
                <Image Source="{Binding ImagePreview}" />
            </StackPanel>
        </Border>
        <!--  Mod actions  -->
        <Border
            Background="{DynamicResource PanelBackgroundBrush}"
            BorderBrush="Gray"
            BorderThickness="1"
            CornerRadius="8"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            HorizontalAlignment="Center"
            IsVisible="False"
            VerticalAlignment="Center"
            Width="380"
            ZIndex="8"
            x:Name="ActionConfigPanel">
            <StackPanel Margin="8" Spacing="4">
                <TextBlock FontSize="24">Manage user:</TextBlock>
                <TextBox
                    IsVisible="{Binding CurrentModerationAll, Converter={StaticResource NotConverter}}"
                    Text="{Binding CurrentModerationMessageId}"
                    Watermark="Player uid" />
                <ToggleSwitch IsChecked="{Binding CurrentModerationAll}" IsVisible="{Binding CurrentModerationAction, Converter={StaticResource ValueEqualsConverter}, ConverterParameter={x:Static rplaceModtools:ModerationAction.Captcha}, Mode=TwoWay}">
                    <!-- Long story
                    <ToggleSwitch.IsChecked>
                        <MultiBinding Converter="{StaticResource AllTrueConverter}">
                            <Binding Path="CurrentModerationAll" />
                            <Binding Path="CurrentModerationAction"
                                     Mode="OneWay"
                                     Converter="{StaticResource ValueEqualsConverter}"
                                     ConverterParameter="{x:Static rplaceModtools:ModerationAction.Captcha}" />
                        </MultiBinding>
                    </ToggleSwitch.IsChecked>
                    -->
                    All clients
                </ToggleSwitch>
                <StackPanel>
                    <TextBlock FontWeight="Bold">Action:</TextBlock>
                    <RadioButton IsChecked="{Binding CurrentModerationAction, Converter={StaticResource ValueEqualsConverter}, ConverterParameter={x:Static rplaceModtools:ModerationAction.Delete}}">Delete message</RadioButton>
                    <RadioButton IsChecked="{Binding CurrentModerationAction, Converter={StaticResource ValueEqualsConverter}, ConverterParameter={x:Static rplaceModtools:ModerationAction.Kick}}">Kick</RadioButton>
                    <RadioButton IsChecked="{Binding CurrentModerationAction, Converter={StaticResource ValueEqualsConverter}, ConverterParameter={x:Static rplaceModtools:ModerationAction.Mute}}">Mute</RadioButton>
                    <RadioButton IsChecked="{Binding CurrentModerationAction, Converter={StaticResource ValueEqualsConverter}, ConverterParameter={x:Static rplaceModtools:ModerationAction.Ban}}">Ban</RadioButton>
                    <RadioButton IsChecked="{Binding CurrentModerationAction, Converter={StaticResource ValueEqualsConverter}, ConverterParameter={x:Static rplaceModtools:ModerationAction.Captcha}}">Captcha solve</RadioButton>
                </StackPanel>
                <StackPanel>
                    <StackPanel.IsVisible>
                        <MultiBinding Converter="{StaticResource AllTrueConverter}">
                            <Binding
                                Converter="{StaticResource ValueNotEqualsConverter}"
                                ConverterParameter="{x:Static rplaceModtools:ModerationAction.Kick}"
                                Path="CurrentModerationAction" />
                            <Binding
                                Converter="{StaticResource ValueNotEqualsConverter}"
                                ConverterParameter="{x:Static rplaceModtools:ModerationAction.Captcha}"
                                Path="CurrentModerationAction" />
                        </MultiBinding>
                    </StackPanel.IsVisible>
                    <TextBlock FontWeight="Bold">Duration (hours, minutes):</TextBlock>
                    <TimePicker SelectedTime="{Binding CurrentModerationDuration}" />
                </StackPanel>
                <StackPanel>
                    <TextBlock FontWeight="Bold">Reason:</TextBlock>
                    <TextBox
                        MaxLength="300"
                        Text="{Binding CurrentModerationReason}"
                        Watermark="Explanation*" />
                </StackPanel>
                <Border
                    CornerRadius="4"
                    Margin="4"
                    Padding="8">
                    <Border.Background>
                        <SolidColorBrush Color="Gray" Opacity="0.5" />
                    </Border.Background>
                    <TextBlock
                        FontStyle="Italic"
                        Foreground="Yellow"
                        TextWrapping="Wrap">
                        &#x26A0; All moderation actions are logged by the server and reports sent to all other staff. Follow the moderation rules. Do not abuse power.
                    </TextBlock>
                </Border>
                <Grid ColumnDefinitions="* 16 *">
                    <Button
                        Click="OnActionConfigSubmitPressed"
                        Grid.Column="0"
                        HorizontalAlignment="Stretch">
                        Submit
                    </Button>
                    <Button
                        Click="OnActionConfigCancelPressed"
                        Grid.Column="2"
                        HorizontalAlignment="Stretch">
                        Cancel
                    </Button>
                </Grid>
            </StackPanel>
        </Border>
        <Panel
            Background="{DynamicResource WindowBackgroundBrush}"
            Grid.Column="0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            x:Name="CanvasBackground">
            <views:SkCanvas
                Board="{Binding Board}"
                CanvasHeight="{Binding CanvasHeight}"
                CanvasWidth="{Binding CanvasWidth}"
                Changes="{Binding Changes}"
                CurrentHandle="{Binding CurrentHandle}"
                CurrentSelection="{Binding CurrentSelection}"
                SelectionBoard="{Binding SelectionBoard}"
                Selections="{Binding Selections}"
                x:Name="Board" />
            <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Border
                    Background="Transparent"
                    BorderBrush="Gray"
                    BorderThickness="1"
                    CornerRadius="2"
                    Height="16"
                    IsVisible="False"
                    Opacity="1"
                    Width="16"
                    x:Name="CursorIndicatorRectangle" />
            </Canvas>
            <!--  Change this border into just the listbox, put the border around each element  -->
            <ListBox
                Classes="StateInfo"
                ClipToBounds="True"
                HorizontalAlignment="Right"
                ItemsSource="{Binding StateInfos}"
                Margin="16"
                SelectedItem="{Binding SelectedStateInfo}"
                VerticalAlignment="Top">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <views:SkBlurBehind BlurRadius="10">
                            <ContentPresenter Content="{Binding}" Padding="4" />
                        </views:SkBlurBehind>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.Styles>
                    <Style Selector="ListBoxItem">
                        <Setter Property="Border.CornerRadius" Value="8" />
                        <Setter Property="Margin" Value="4" />
                        <Setter Property="Padding" Value="1" />
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="Gray" Opacity="0.4" />
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style Selector="ListBoxItem:pointerover /template/ ContentPresenter">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="Gray" Opacity="0.6" />
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style Selector="ListBoxItem:selected /template/ ContentPresenter">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="Gray" Opacity="0.6" />
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.Styles>
            </ListBox>
            <Button
                Click="OnSelectColourClicked"
                HorizontalAlignment="Center"
                Margin="10"
                Padding="10"
                VerticalAlignment="Bottom"
                ZIndex="3">
                Select Colour
            </Button>
            <DockPanel
                Background="{DynamicResource PanelBackgroundBrush}"
                Dock="Bottom"
                Height="150"
                HorizontalAlignment="Stretch"
                IsVisible="False"
                VerticalAlignment="Bottom"
                ZIndex="8"
                x:Name="Palette">
                <Grid RowDefinitions="* Auto">
                    <ScrollViewer Grid.Row="0">
                        <ListBox
                            Background="Transparent"
                            HorizontalAlignment="Stretch"
                            ItemsSource="{Binding AvColours}"
                            SelectedIndex="{Binding CurrentColour}"
                            VerticalAlignment="Top"
                            x:Name="PaletteListBox">
                            <ListBox.DataContext>
                                <vm:PaletteViewModel />
                            </ListBox.DataContext>
                            <ListBox.Styles>
                                <Style Selector="ListBoxItem">
                                    <Setter Property="Padding" Value="0" />
                                </Style>
                            </ListBox.Styles>
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel
                                        Margin="10,16,10,0"
                                        Orientation="Horizontal"
                                        x:Name="PalettePanel" />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Border Background="{Binding}" Classes="PaletteColour" />
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </ScrollViewer>
                    <Border Classes="DoneButton" Grid.Row="1">
                        <Button
                            Background="Transparent"
                            Click="OnPaletteDoneButtonClicked"
                            CornerRadius="36"
                            HorizontalAlignment="Stretch"
                            HorizontalContentAlignment="Center"
                            Padding="8"
                            VerticalAlignment="Stretch">
                            Done
                        </Button>
                    </Border>
                </Grid>
            </DockPanel>
        </Panel>
        <Border
            Background="{DynamicResource PanelBackgroundBrush}"
            BorderBrush="Black"
            BoxShadow="0 0 10 2 Gray"
            Grid.Column="1"
            Padding="10"
            Width="300"
            x:Name="ToolsPanel">
            <TabControl Margin="0" Padding="0">
                <TabItem Header="Tools">
                    <ScrollViewer>
                        <StackPanel>
                            <TextBlock FontSize="18">Canvas:</TextBlock>
                            <AutoCompleteBox
                                IsEnabled="False"
                                ItemsSource="{Binding KnownWebsockets}"
                                Margin="5"
                                Watermark="Switch canvas/server" />
                            <ComboBox
                                ItemsSource="{Binding Backups}"
                                Margin="5"
                                SelectedItem="{Binding CurrentBackup}"
                                x:Name="CanvasDropdown">
                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel />
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                                <ToolTip.Tip>Select a previous backup of the canvas for viewing and rollback.</ToolTip.Tip>
                            </ComboBox>
                            <Panel Margin="5,0,5,0">
                                <Image
                                    RenderOptions.BitmapInterpolationMode="None"
                                    Source="{Binding PreviewImageSource}"
                                    x:Name="PreviewImg" />
                                <Grid
                                    Background="{DynamicResource PanelBackgroundBrush}"
                                    ColumnDefinitions="Auto, Auto, *"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Bottom">
                                    <Button
                                        Command="{Binding NextBackupCommand}"
                                        Grid.Column="0"
                                        Margin="4">
                                        Previous
                                    </Button>
                                    <Button
                                        Command="{Binding PreviousBackupCommand}"
                                        Grid.Column="1"
                                        Margin="4">
                                        Next
                                    </Button>
                                    <Button
                                        Command="{Binding DownloadCanvasPreviewCommand}"
                                        Grid.Column="2"
                                        HorizontalAlignment="Right"
                                        IsEnabled="{Binding StartedAndConfigured}"
                                        Margin="4"
                                        x:Name="DownloadBtn">
                                        Download
                                    </Button>
                                </Grid>
                            </Panel>
                            <TextBlock FontSize="18">Tool modes:</TextBlock>
                            <Grid
                                ColumnDefinitions="*, *"
                                Margin="5"
                                RowDefinitions="*, *">
                                <ToggleButton
                                    Command="{Binding SelectPaintToolCommand}"
                                    Grid.Column="0"
                                    Grid.Row="0"
                                    HorizontalAlignment="Stretch"
                                    IsChecked="{Binding CurrentTool, Converter={StaticResource ValueEqualsConverter}, ConverterParameter={x:Static models:Tool.PaintBrush}}"
                                    Margin="0,0,5,0"
                                    x:Name="PaintTool">
                                    <ToolTip.Tip>Easily and quickly perform drawing operations upon the canvas.</ToolTip.Tip>
                                    Paintbrush
                                </ToggleButton>
                                <ToggleButton
                                    Command="{Binding SelectRubberToolCommand}"
                                    Grid.Column="1"
                                    Grid.Row="0"
                                    HorizontalAlignment="Stretch"
                                    IsChecked="{Binding CurrentTool, Converter={StaticResource ValueEqualsConverter}, ConverterParameter={x:Static models:Tool.Rubber}}"
                                    IsEnabled="False"
                                    Margin="5,0,0,0"
                                    x:Name="RubberTool">
                                    <ToolTip.Tip>Erase areas of drawings with the paintbrush tool to the the canvas original state.</ToolTip.Tip>
                                    Rubber
                                </ToggleButton>
                                <ToggleButton
                                    Command="{Binding SelectSelectionToolCommand}"
                                    Grid.Column="0"
                                    Grid.Row="1"
                                    HorizontalAlignment="Stretch"
                                    IsChecked="{Binding CurrentTool, Converter={StaticResource ValueEqualsConverter}, ConverterParameter={x:Static models:Tool.Select}}"
                                    Margin="0,5,5,0"
                                    x:Name="SelectTool">
                                    <ToolTip.Tip>Select an area of the canvas to view for rollback, or perform modifications on.</ToolTip.Tip>
                                    Select tool
                                </ToggleButton>
                                <ToggleButton
                                    Grid.Column="1"
                                    Grid.Row="1"
                                    HorizontalAlignment="Stretch"
                                    IsChecked="{Binding CurrentTool, Converter={StaticResource ValueEqualsConverter}, ConverterParameter={x:Static models:Tool.Fill}}"
                                    IsEnabled="False"
                                    Margin="5,5,0,0"
                                    x:Name="FIllTool">
                                    <ToolTip.Tip>Fill area of canvas with a desired colour using paint bucket fill.</ToolTip.Tip>
                                    Paint bucket fill
                                </ToggleButton>
                            </Grid>
                            <ToggleSwitch
                                Command="{Binding ViewSelectedBackupCommand}"
                                IsChecked="{Binding ViewSelectedBackupArea}"
                                Margin="5"
                                x:Name="ViewSelectedBackup">
                                <ToolTip.Tip>
                                    By turning this on, instead of viewing the whole canvas as the backup, only the area
                                    within your selection would peek through to the backup, allowing for easier visualisations
                                    of your rollback.
                                </ToolTip.Tip>
                                View selected area at backup
                            </ToggleSwitch>
                            <Grid ColumnDefinitions="* Auto Auto">
                                <Button
                                    Command="{Binding RollbackSelectedAreaCommand}"
                                    Grid.Column="0"
                                    HorizontalAlignment="Stretch"
                                    Margin="5">
                                    <ToolTip.Tip>Revert the selected area of the canvas to a previous date.</ToolTip.Tip>
                                    Rollback selected area
                                </Button>
                                <Button
                                    Click="OnLoadLocalClicked"
                                    Grid.Column="1"
                                    HorizontalAlignment="Stretch"
                                    Margin="5">
                                    <ToolTip.Tip>Load a place file from your local device for rollback</ToolTip.Tip>
                                    &#x1F4C2;
                                </Button>
                                <Button
                                    Click="OnLoadImageClicked"
                                    Grid.Column="2"
                                    HorizontalAlignment="Stretch"
                                    Margin="5">
                                    <ToolTip.Tip>Load an image from local device to be used for rollback</ToolTip.Tip>
                                    &#x1F4C2;
                                </Button>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="Live chat">
                    <Grid
                        HorizontalAlignment="Stretch"
                        RowDefinitions="* Auto"
                        VerticalAlignment="Stretch"
                        x:Name="LiveChatGridContainer">
                        <Grid.DataContext>
                            <vm:LiveChatViewModel />
                        </Grid.DataContext>
                        <Grid.Styles>
                            <Style Selector="TabControl">
                                <Setter Property="Padding" Value="0" />
                            </Style>
                            <Style Selector="TabItem">
                                <Setter Property="Padding" Value="4 0 4 0" />
                                <Setter Property="MinHeight" Value="24" />
                            </Style>
                        </Grid.Styles>
                        <TabControl
                            Grid.Row="0"
                            HorizontalAlignment="Stretch"
                            ItemsSource="{Binding Channels}"
                            SelectedItem="{Binding CurrentChannel}"
                            VerticalAlignment="Stretch"
                            x:Name="LiveChatTabs">
                            <TabControl.ItemTemplate>
                                <!--  Header  -->
                                <DataTemplate>
                                    <TextBlock FontSize="16" Text="{Binding ChannelName}" />
                                </DataTemplate>
                            </TabControl.ItemTemplate>
                            <TabControl.DataTemplates>
                                <!--  Contents  -->
                                <DataTemplate DataType="{x:Type vm:LiveChatChannelViewModel}">
                                    <ListBox Background="Transparent" ItemsSource="{Binding Messages}">
                                        <ListBox.Styles>
                                            <Style Selector="ListBoxItem">
                                                <Setter Property="Padding" Value="0" />
                                            </Style>
                                        </ListBox.Styles>
                                        <ListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel />
                                            </ItemsPanelTemplate>
                                        </ListBox.ItemsPanel>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate DataType="{x:Type models:LiveChatMessage}">
                                                <StackPanel>
                                                    <StackPanel.Styles>
                                                        <Style Selector="StackPanel">
                                                            <Setter Property="Cursor" Value="Hand" />
                                                        </Style>
                                                    </StackPanel.Styles>
                                                    <StackPanel
                                                        IsVisible="{Binding RepliesTo, Converter={x:Static ObjectConverters.IsNotNull}}"
                                                        Opacity="0.6"
                                                        Orientation="Horizontal">
                                                        <Border
                                                            Background="Black"
                                                            CornerRadius="4 0 0 0"
                                                            VerticalAlignment="Stretch"
                                                            Width="3" />
                                                        <Image Source="../Assets/reply.png" />
                                                        <TextBlock
                                                            FontStyle="Italic"
                                                            FontWeight="Bold"
                                                            Text="{Binding RepliesTo.Name, FallbackValue='??????'}" />
                                                        <TextBlock
                                                            FontStyle="Italic"
                                                            FontWeight="Bold"
                                                            Text="{Binding RepliesTo.Message, FallbackValue='Message could not be loaded'}" />
                                                    </StackPanel>
                                                    <TextBlock TextWrapping="Wrap">
                                                        <TextBlock.ContextMenu>
                                                            <ContextMenu>
                                                                <MenuItem Header="{Binding SenderIntId, StringFormat='Sender ID: {0}'}" />
                                                                <MenuItem Header="{Binding MessageId, StringFormat='Message ID: {0}'}" />
                                                                <MenuItem Header="{Binding Name, StringFormat='Kick {0}'}" PointerPressed="OnKickChatterPressed" />
                                                                <MenuItem Header="{Binding Name, StringFormat='Mute {0}'}" PointerPressed="OnMuteChatterPressed" />
                                                                <MenuItem Header="{Binding Name, StringFormat='Ban {0}'}" PointerPressed="OnBanChatterPressed" />
                                                            </ContextMenu>
                                                        </TextBlock.ContextMenu>
                                                        <Run
                                                            FontWeight="Bold"
                                                            Foreground="{Binding Name, Converter={StaticResource HashColourConverter}}"
                                                            Text="{Binding Path=Name}" />
                                                        <Run Text="{Binding Message}" />
                                                    </TextBlock>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </DataTemplate>
                            </TabControl.DataTemplates>
                        </TabControl>
                        <Grid ColumnDefinitions="*, 4, Auto" Grid.Row="1">
                            <TextBox
                                Grid.Column="0"
                                KeyDown="OnChatInputKeyDown"
                                Watermark="Enter a message..."
                                x:Name="ChatInput" />
                            <Button
                                Click="OnChatSendPressed"
                                Grid.Column="2"
                                VerticalAlignment="Stretch">
                                Send
                            </Button>
                        </Grid>
                    </Grid>
                </TabItem>
            </TabControl>
        </Border>
        <!--  About panel  -->
        <Border
            Background="{DynamicResource PanelBackgroundBrush}"
            BorderBrush="Gray"
            BorderThickness="1"
            CornerRadius="8"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            HorizontalAlignment="Center"
            IsVisible="False"
            Padding="10"
            VerticalAlignment="Center"
            Width="512"
            ZIndex="8"
            x:Name="AboutPanel">
            <StackPanel>
                <TextBlock FontSize="24">Rplace.Live Mod Tools</TextBlock>
                <TextBlock TextWrapping="Wrap">
                    Copyright (C) 2023 Zekiah-A
                    This program is free software: you can redistribute it and/or modify
                    it under the terms of the GNU General Public License as published by
                    the Free Software Foundation, either version 3 of the License, or
                    (at your option) any later version.
                    This program is distributed in the hope that it will be useful,
                    but WITHOUT ANY WARRANTY; without even the implied warranty of
                    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                    GNU General Public License for more details.
                    You should have received a copy of the GNU General Public License
                    along with this program.  If not, see &lt;https://www.gnu.org/licenses/&gt;
                </TextBlock>
                <TextBlock FontSize="24">Contributor mentions:</TextBlock>
                <TextBlock>
                    - Thanks to Starlk for teaching me how to Avalonia
                </TextBlock>
                <Button Click="OnCloseAboutClicked" HorizontalAlignment="Stretch">Close</Button>
            </StackPanel>
        </Border>
        <Canvas Grid.Column="0">
            <Button
                Canvas.Left="10"
                Canvas.Top="10"
                Content="..."
                FontSize="16">
                <Button.Flyout>
                    <MenuFlyout Placement="Bottom">
                        <MenuItem Header="Settings">
                            <MenuItem Header="Enable cache place files" IsEnabled="False" />
                            <MenuItem Command="{Binding ToggleThemeCommand}" Header="Toggle dark mode" />
                            <MenuItem Header="Toggle backup check interval" IsEnabled="False" />
                            <MenuItem Click="OnResetCanvasViewPressed" Header="Reset canvas view" />
                        </MenuItem>
                        <MenuItem Header="See application logs" IsEnabled="False" />
                        <MenuItem Header="Check for updates" IsEnabled="False" />
                        <MenuItem Header="Moderate user" PointerPressed="OnModerateUserPressed" />
                        <MenuItem Click="OnAboutClicked" Header="About" />
                        <MenuItem Click="OnOpenGithubClicked" Header="Github" />
                    </MenuFlyout>
                </Button.Flyout>
            </Button>
        </Canvas>
    </Grid>
</Window>
